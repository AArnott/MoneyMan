trigger: none # We only want to trigger manually or based on resources
pr: none

resources:
  pipelines:
  - pipeline: CI
    source: MoneyMan
    trigger:
      tags:
      - auto-release

stages:
- stage: releasify
  displayName: squirrel releasify
  jobs:
  - job:
    pool: Hosted Windows 2019 with VS2019
    variables:
      SquirrelVersion: 2.0.2-netcore.3
    steps:
    - checkout: self # we need this for nuget.config so that `nuget install` will work
      clean: true
    - powershell: Write-Host "##vso[build.updatebuildnumber]$(resources.pipeline.CI.runName)"
      displayName: Set pipeline name
    - download: CI
      artifact: Variables-Windows
      displayName: Download pipeline variables
    - powershell: $(Pipeline.Workspace)/CI/Variables-Windows/_pipelines.ps1
      displayName: Applying pipeline variables
    - task: NuGetToolInstaller@1
      displayName: Use NuGet 5.x
      inputs:
        versionSpec: 5.x
    - download: CI
      artifact: deployables-Windows
      displayName: Download Squirrel input packages
      patterns: 'deployables-Windows/SquirrelInputs/Nerdbank_MoneyMan_*.$(NUGETPACKAGEVERSION).nupkg'
    - powershell: |
        Write-Host "Installing Squirrel"
        nuget install Squirrel.Windows -Version $(SquirrelVersion) -OutputDirectory $(Agent.TempDirectory)\Squirrel -PackageSaveMode nuspec -ExcludeVersion -NonInteractive -Verbosity Quiet
        $SquirrelTools = "$(Agent.TempDirectory)\Squirrel\squirrel.windows\tools"

        if ("$(NUGETPACKAGEVERSION)".Contains('-')) {
          $channel = "prerelease"
        } else {
          $channel = "release"
        }

        "win-x64","win-arm64" |% {
          $localRidPath = "$(Build.StagingDirectory)\release_blobs\$channel\$_"
          Write-Host "Downloading prior release for $_"
          & "$SquirrelTools\SyncReleases" -r $localRidPath  -u https://moneymanreleases.blob.core.windows.net/releases/$channel/$_

          Write-Host "Building new release package for $_"
          $input = "$(Pipeline.Workspace)/CI/deployables-Windows/SquirrelInputs/Nerdbank_MoneyMan_$_.$(NUGETPACKAGEVERSION).nupkg"
          & "$SquirrelTools\Squirrel" -r $localRidPath --no-msi --releasify $input
          ren $localRidPath\Setup.exe $localRidPath\Nerdbank.MoneyMan.Setup.exe -Force

          # We only want to upload files to blob storage that were not already there or that we intend to overwrite.
          # We do this by deleting files that are not new from this pipeline.
          # Note the -Exclude list are the files we KEEP and upload.
          del $localRidPath\* -Exclude RELEASES,Nerdbank.MoneyMan.Setup.exe,Nerdbank.MoneyMan.$_-$(NUGETPACKAGEVERSION)-*.nupkg
        }
      displayName: Build squirrel packages
    - publish: $(Build.StagingDirectory)/release_blobs
      artifact: squirrelInstaller
      displayName: Publishing installer as a pipeline artifact

    - task: AzureFileCopy@4
      displayName: Publishing release
      inputs:
        SourcePath: $(Build.StagingDirectory)\release_blobs\*
        azureSubscription: Azure Free Trial(c5eda4ed-4681-4034-8835-65d67e7d4b7c)
        Destination: AzureBlob
        storage: moneymanreleases
        ContainerName: releases
        AdditionalArgumentsForBlobCopy: '--overwrite true --recursive'

- stage: GitHubRelease
  displayName: GitHub Release
  jobs:
  - deployment: create
    pool:
      vmImage: ubuntu-latest
    environment: No-Approval
    strategy:
      runOnce:
        deploy:
          steps:
          - download: none
          - task: GitHubRelease@1
            displayName: GitHub release (create)
            inputs:
              gitHubConnection: github.com_AArnott_OAuth
              repositoryName: $(Build.Repository.Name)
              target: $(resources.pipeline.CI.sourceCommit)
              tagSource: userSpecifiedTag
              tag: v$(resources.pipeline.CI.runName)
              title: v$(resources.pipeline.CI.runName)
              isDraft: true # After running this step, visit the new draft release, edit, and publish.
              changeLogCompareToRelease: lastNonDraftRelease
              changeLogType: issueBased
              changeLogLabels: |
                [
                  { "label" : "bug", "displayName" : "Fixes", "state" : "closed" },
                  { "label" : "enhancement", "displayName": "Enhancements", "state" : "closed" }
                ]

- stage: nuget_org
  displayName: nuget.org
  dependsOn: GitHubRelease
  condition: false # Suppress until it's worth sharing
  jobs:
  - deployment: push
    pool:
      vmImage: ubuntu-latest
    environment: No-Approval
    strategy:
      runOnce:
        deploy:
          steps:
          - download: CI
            artifact: deployables-Windows
            displayName: Download deployables-Windows artifact
            patterns: 'deployables-Windows/NuGet/*'
          - task: NuGetToolInstaller@1
            displayName: Use NuGet 5.x
            inputs:
              versionSpec: 5.x
          - task: NuGetCommand@2
            displayName: NuGet push
            inputs:
              command: push
              packagesToPush: $(Pipeline.Workspace)/CI/deployables-Windows/NuGet/*.nupkg
              nuGetFeedType: external
              publishFeedCredentials: nuget.org

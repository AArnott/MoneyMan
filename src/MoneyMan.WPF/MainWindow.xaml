<Window x:Class="MoneyMan.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"	
		xmlns:local="clr-namespace:MoneyMan.ViewModel"
		xmlns:vm="clr-namespace:Nerdbank.MoneyManagement.ViewModels;assembly=Nerdbank.MoneyManagement"
		xmlns:converters="clr-namespace:MoneyMan.Converters"
		mc:Ignorable="d"
		Title="{Binding Document.Title}" Height="456" Width="762">
	<Window.Resources>
		<local:MainPageViewModel x:Key="viewModel" />
		<converters:NullToVisibilityConverter x:Key="nullToVisibilityConverter" />
		<converters:NumberOrNullConverter x:Key="numberOrNullConverter" />
		<BooleanToVisibilityConverter x:Key="boolToVisibilityConverter" />
	</Window.Resources>
	<DockPanel DataContext="{Binding Source={StaticResource viewModel}, Path=Document}">
		<Menu DockPanel.Dock="Top">
			<MenuItem Header="_File">
				<MenuItem Header="_New" Command="ApplicationCommands.New" />
				<MenuItem Header="_Open" Command="ApplicationCommands.Open" />
				<MenuItem Header="_Close" Command="{Binding FileCloseCommand, Source={StaticResource viewModel}}" />
			</MenuItem>
		</Menu>
		<ToolBarTray DockPanel.Dock="Top" Visibility="Collapsed">
			<ToolBar>
				<Button Command="NavigationCommands.BrowseBack">
					Back
				</Button>
				<Button Command="NavigationCommands.BrowseForward">
					Forward
				</Button>
			</ToolBar>
		</ToolBarTray>
		<StatusBar DockPanel.Dock="Bottom" DataContext="{StaticResource viewModel}">
			<StatusBarItem DockPanel.Dock="Right"  Content="{Binding Version}" />
			<StatusBarItem DockPanel.Dock="Right" VerticalContentAlignment="Stretch" Visibility="{Binding UpdateDownloading, Converter={StaticResource boolToVisibilityConverter}}">
				<ProgressBar Value="{Binding DownloadingUpdatePercentage}"
				             Minimum="0" Maximum="100" Width="50pt" Margin="0,2,0,2" VerticalAlignment="Stretch" />
			</StatusBarItem>
			<StatusBarItem Content="{Binding StatusMessage}" />
		</StatusBar>
		<TabControl TabStripPlacement="Bottom"
					Visibility="{Binding IsFileOpen, Converter={StaticResource boolToVisibilityConverter}}">
			<TabItem Header="{Binding Title}" DataContext="{Binding BankingPanel}">
				<TabItem.Resources>
					<CollectionViewSource Source="{Binding Accounts}" x:Key="accounts" />
				</TabItem.Resources>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="1*" />
						<ColumnDefinition Width="4*" />
					</Grid.ColumnDefinitions>
					<DockPanel Grid.Column="0">
						<DockPanel DockPanel.Dock="Bottom" Margin="5">
							<TextBlock DockPanel.Dock="Right" Text="{Binding Source={StaticResource viewModel}, Path=Document.NetWorth, StringFormat=C}" FontWeight="Bold" />
							<TextBlock Text="{Binding NetWorthCaption}" FontWeight="Bold" />
						</DockPanel>
						<ListView ItemsSource="{Binding Source={StaticResource accounts}}" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding SelectedAccount}" HorizontalContentAlignment="Stretch" SelectionMode="Single">
							<ListView.ItemTemplate>
								<DataTemplate>
									<DockPanel>
										<TextBlock Text="{Binding Balance, StringFormat=C}" DockPanel.Dock="Right" />
										<TextBlock Text="{Binding Name}" />
									</DockPanel>
								</DataTemplate>
							</ListView.ItemTemplate>
						</ListView>
					</DockPanel>
					<DockPanel Grid.Column="1"
							   DataContext="{Binding SelectedAccount}" 
							   Visibility="{Binding Converter={StaticResource nullToVisibilityConverter}}">
						<DockPanel.Resources>
							<CollectionViewSource Source="{Binding Transactions}" x:Key="transactions" />
						</DockPanel.Resources>
						<Label Content="{Binding Name}" DockPanel.Dock="Top" FontSize="14pt" FontWeight="Bold" />
						<DataGrid Name="TransactionDataGrid"
								  AlternatingRowBackground="LightBlue"
								  AlternationCount="2" 
								  PreparingCellForEdit="TransactionDataGrid_PreparingCellForEdit"
								  ItemsSource="{Binding Source={StaticResource transactions}}"
								  IsSynchronizedWithCurrentItem="True"
								  SelectedItem="{Binding Document.SelectedTransaction, Source={StaticResource viewModel}, Mode=TwoWay, TargetNullValue={x:Static CollectionView.NewItemPlaceholder}}"
								  AddingNewItem="TransactionGrid_AddingNewItem"
								  AutoGenerateColumns="False">
							<DataGrid.Columns>
								<DataGridTemplateColumn Header="{Binding Document.BankingPanel.WhenHeader, Source={StaticResource viewModel}}">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding When, Mode=OneWay, StringFormat=d}" Margin="3pt" />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
									<DataGridTemplateColumn.CellEditingTemplate>
										<DataTemplate>
											<DatePicker SelectedDate="{Binding When, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
										</DataTemplate>
									</DataGridTemplateColumn.CellEditingTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn Header="{Binding Document.BankingPanel.PayeeHeader, Source={StaticResource viewModel}}">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding Payee, Mode=OneWay}" Margin="3pt" />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
									<DataGridTemplateColumn.CellEditingTemplate>
										<DataTemplate>
											<TextBox Text="{Binding Payee, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
										</DataTemplate>
									</DataGridTemplateColumn.CellEditingTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn Header="{Binding Document.BankingPanel.CategoryHeader, Source={StaticResource viewModel}}">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding CategoryOrTransfer.TransferTargetName}" Margin="3pt" />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
									<DataGridTemplateColumn.CellEditingTemplate>
										<DataTemplate>
											<StackPanel Orientation="Horizontal">
												<ComboBox
												ItemsSource="{Binding Source={StaticResource viewModel}, Path=Document.TransactionTargets}"
												SelectedItem="{Binding CategoryOrTransfer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
													<ComboBox.ItemTemplate>
														<DataTemplate>
															<TextBlock Text="{Binding TransferTargetName}" />
														</DataTemplate>
													</ComboBox.ItemTemplate>
												</ComboBox>
												<ToggleButton Content="📃" Command="{Binding SplitCommand}" />
											</StackPanel>
										</DataTemplate>
									</DataGridTemplateColumn.CellEditingTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn Header="{Binding Document.BankingPanel.MemoHeader, Source={StaticResource viewModel}}">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding Memo, Mode=OneWay}" Margin="3pt" />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
									<DataGridTemplateColumn.CellEditingTemplate>
										<DataTemplate>
											<TextBox Text="{Binding Memo, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
										</DataTemplate>
									</DataGridTemplateColumn.CellEditingTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn Header="{Binding Document.BankingPanel.AmountHeader, Source={StaticResource viewModel}}">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Margin="3pt" Text="{Binding Amount, StringFormat=C}" HorizontalAlignment="Right" />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
									<DataGridTemplateColumn.CellEditingTemplate>
										<DataTemplate>
											<TextBox Text="{Binding Amount, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" InputScope="Number" />
										</DataTemplate>
									</DataGridTemplateColumn.CellEditingTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn Header="{Binding Document.BankingPanel.CheckNumberHeader, Source={StaticResource viewModel}}">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Margin="3pt" Text="{Binding CheckNumber, Converter={StaticResource numberOrNullConverter}}" HorizontalAlignment="Right" />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
									<DataGridTemplateColumn.CellEditingTemplate>
										<DataTemplate>
											<TextBox Text="{Binding CheckNumber, Converter={StaticResource numberOrNullConverter}}" InputScope="Number" />
										</DataTemplate>
									</DataGridTemplateColumn.CellEditingTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn Header="{Binding Document.BankingPanel.ClearedHeader, Source={StaticResource viewModel}}">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Margin="3pt" Text="{Binding Cleared.ShortCaption}" />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
									<DataGridTemplateColumn.CellEditingTemplate>
										<DataTemplate>
											<ComboBox SelectedItem="{Binding Cleared, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
											          ItemsSource="{Binding ClearedStates}"
											          DisplayMemberPath="Caption" 
											          SelectedValuePath="Value" />
										</DataTemplate>
									</DataGridTemplateColumn.CellEditingTemplate>
								</DataGridTemplateColumn>
								<DataGridTemplateColumn Header="{Binding Document.BankingPanel.BalanceHeader, Source={StaticResource viewModel}}" IsReadOnly="True">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<TextBlock Margin="3pt" Text="{Binding Balance, StringFormat=C}" HorizontalAlignment="Right" />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
							</DataGrid.Columns>
							<DataGrid.RowDetailsTemplate>
								<DataTemplate>
									<DataGrid AlternatingRowBackground="LightGreen"
									          AlternationCount="2"
									          Margin="5,0,0,0"
									          ItemsSource="{Binding Splits}"
									          Visibility="{Binding ContainsSplits, Converter={StaticResource boolToVisibilityConverter}}"
									          AddingNewItem="SplitGrid_AddingNewItem"
									          AutoGenerateColumns="False">
										<DataGrid.Columns>
											<DataGridTemplateColumn Header="{Binding Document.BankingPanel.CategoryHeader, Source={StaticResource viewModel}}">
												<DataGridTemplateColumn.CellTemplate>
													<DataTemplate>
														<TextBlock Text="{Binding CategoryOrTransfer.TransferTargetName}" Margin="3pt" />
													</DataTemplate>
												</DataGridTemplateColumn.CellTemplate>
												<DataGridTemplateColumn.CellEditingTemplate>
													<DataTemplate>
														<ComboBox ItemsSource="{Binding Source={StaticResource viewModel}, Path=Document.TransactionTargets}"
														          SelectedItem="{Binding CategoryOrTransfer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
															<ComboBox.ItemTemplate>
																<DataTemplate>
																	<TextBlock Text="{Binding TransferTargetName}" />
																</DataTemplate>
															</ComboBox.ItemTemplate>
														</ComboBox>
													</DataTemplate>
												</DataGridTemplateColumn.CellEditingTemplate>
											</DataGridTemplateColumn>
											<DataGridTemplateColumn Header="{Binding Document.BankingPanel.MemoHeader, Source={StaticResource viewModel}}">
												<DataGridTemplateColumn.CellTemplate>
													<DataTemplate>
														<TextBlock Text="{Binding Memo, Mode=OneWay}" Margin="3pt" />
													</DataTemplate>
												</DataGridTemplateColumn.CellTemplate>
												<DataGridTemplateColumn.CellEditingTemplate>
													<DataTemplate>
														<TextBox Text="{Binding Memo, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
													</DataTemplate>
												</DataGridTemplateColumn.CellEditingTemplate>
											</DataGridTemplateColumn>
											<DataGridTemplateColumn Header="{Binding Document.BankingPanel.AmountHeader, Source={StaticResource viewModel}}">
												<DataGridTemplateColumn.CellTemplate>
													<DataTemplate>
														<TextBlock Margin="3pt" Text="{Binding Amount, StringFormat=C}" HorizontalAlignment="Right" />
													</DataTemplate>
												</DataGridTemplateColumn.CellTemplate>
												<DataGridTemplateColumn.CellEditingTemplate>
													<DataTemplate>
														<TextBox Text="{Binding Amount, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" InputScope="Number" />
													</DataTemplate>
												</DataGridTemplateColumn.CellEditingTemplate>
											</DataGridTemplateColumn>
										</DataGrid.Columns>
									</DataGrid>
								</DataTemplate>
							</DataGrid.RowDetailsTemplate>
							<DataGrid.ContextMenu>
								<ContextMenu>
									<MenuItem Header="{Binding Document.DeleteCommandCaption, Source={StaticResource viewModel}}" Command="{Binding Document.DeleteTransactionsCommand, Source={StaticResource viewModel}}" />
								</ContextMenu>
							</DataGrid.ContextMenu>
						</DataGrid>
					</DockPanel>
				</Grid>
			</TabItem>
			<TabItem Header="{Binding Title}" DataContext="{Binding AccountsPanel}" Height="20" VerticalAlignment="Top">
				<TabItem.Resources>
					<CollectionViewSource Source="{Binding Accounts}" x:Key="categories" />
					<Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
						<Style.Triggers>
							<Trigger Property="Validation.HasError" Value="True">
								<Setter Property="Background" Value="Pink" />
								<Setter Property="ToolTip"
									Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</TabItem.Resources>
				<DockPanel>
					<StackPanel Margin="5,0,5,0" DockPanel.Dock="Right" Width="150pt" DataContext="{StaticResource categories}">
						<Label Content="{Binding Document.AccountsPanel.NameLabel, Source={StaticResource viewModel}}" Target="{Binding ElementName=AccountName}" />
						<TextBox Name="AccountName"
								 MaxLength="100"
								 Style="{StaticResource textBoxInError}"
								 Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" />
						<CheckBox IsChecked="{Binding IsClosed}" Content="{Binding Document.AccountsPanel.IsClosedLabel, Source={StaticResource viewModel}}" Margin="0,15,0,0" />
						<TextBlock Text="{Binding Document.AccountsPanel.IsClosedExplanation, Source={StaticResource viewModel}}" TextWrapping="Wrap" />
					</StackPanel>
					<Button Content="{Binding AddCommandCaption}" DockPanel.Dock="Bottom" Command="{Binding AddCommand}" />
					<ListView Name="AccountsListView" ItemsSource="{Binding Source={StaticResource categories}}" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding SelectedAccount, Mode=TwoWay}">
						<ListView.ItemContainerStyle>
							<Style TargetType="ListBoxItem">
								<Setter Property="ContextMenu">
									<Setter.Value>
										<ContextMenu DataContext="{Binding Document.AccountsPanel, Source={StaticResource viewModel}}">
											<MenuItem Header="{Binding DeleteCommand.Caption}" Command="{Binding DeleteCommand}" />
										</ContextMenu>
									</Setter.Value>
								</Setter>
							</Style>
						</ListView.ItemContainerStyle>
						<ListView.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Name}" />
							</DataTemplate>
						</ListView.ItemTemplate>
					</ListView>
				</DockPanel>
			</TabItem>
			<TabItem Header="{Binding Title}" DataContext="{Binding CategoriesPanel}" Height="20" VerticalAlignment="Top">
				<TabItem.Resources>
					<CollectionViewSource Source="{Binding Categories}" x:Key="categories" />
					<Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
						<Style.Triggers>
							<Trigger Property="Validation.HasError" Value="True">
								<Setter Property="Background" Value="Pink" />
								<Setter Property="ToolTip"
									Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
							</Trigger>
						</Style.Triggers>
					</Style>
				</TabItem.Resources>
				<DockPanel>
					<StackPanel Margin="5,0,5,0" DockPanel.Dock="Right" Width="150pt" DataContext="{StaticResource categories}">
						<Label Content="{Binding Document.CategoriesPanel.NameLabel, Source={StaticResource viewModel}}" Target="{Binding ElementName=CategoryName}" />
						<TextBox Name="CategoryName"
								 MaxLength="{Binding Document.CategoriesPanel.NameMaxLength, Source={StaticResource viewModel}}"
								 Style="{StaticResource textBoxInError}"
								 Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" />
					</StackPanel>
					<Button Content="{Binding AddCommandCaption}" DockPanel.Dock="Bottom" Command="{Binding AddCommand}" />
					<ListView Name="CategoriesListView" ItemsSource="{Binding Source={StaticResource categories}}" IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding SelectedCategory, Mode=TwoWay}">
						<ListView.ItemContainerStyle>
							<Style TargetType="ListBoxItem">
								<Setter Property="ContextMenu">
									<Setter.Value>
										<ContextMenu DataContext="{Binding Document.CategoriesPanel, Source={StaticResource viewModel}}">
											<MenuItem Header="{Binding DeleteCommand.Caption}" Command="{Binding DeleteCommand}" />
										</ContextMenu>
									</Setter.Value>
								</Setter>
							</Style>
						</ListView.ItemContainerStyle>
						<ListView.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Name}" />
							</DataTemplate>
						</ListView.ItemTemplate>
					</ListView>
				</DockPanel>
			</TabItem>
		</TabControl>
	</DockPanel>
</Window>
